<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous" />
    <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet" />
  </head>
  <body>
    <div class="card bg-white">
      <div class="card-body">
        <div class="w-100">
          <h4>Comentários prévios</h4>

          {% for artigo in artigos %}
            <div id="comment_{{ artigo.id }}">
              {{ artigo.comentarios|safe }}
              <!-- <button class="btn btn-primary" onclick="editarComentario('{{ artigo.id }}')">Editar</button> -->
            </div>
            <hr />
          {% endfor %}
          <br />
          <hr />
          <h5 class="mt-3">Compor meu comentário</h5>
          <br />

          <form method="post">
            {% csrf_token %}
            <div id="editor"></div>
            <br />
            <button class="btn btn-success" onclick="salvar()">Enviar</button>

            {% if ultimo_artigo %}
                <button class="btn btn-danger" onclick="excluirComentario({{ ultimo_artigo.id }})">Excluir</button>
            {% endif %}

            {% if ultimo_artigo %}
              <button class="btn btn-primary" onclick="editarForaDoLoop('{{ ultimo_artigo.id }}')">Editar</button>
            {% endif %}
          </form>
            
            
                
                
            
        </div>
      </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>
    <script>
      var toolbarOptions = [['bold', 'italic', 'underline', 'strike'], ['blockquote', 'code-block'], [{ header: 1 }, { header: 2 }], [{ list: 'ordered' }, { list: 'bullet' }], [{ direction: 'rtl' }], [{ size: ['small', false, 'large', 'huge'] }], [{ header: [1, 2, 3, 4, 5, 6, false] }], [{ color: [] }, { background: [] }], [{ font: [] }], [{ align: [] }], ['image'], ['clean']]
      
      var quill = new Quill('#editor', {
        theme: 'snow',
        modules: {
          toolbar: toolbarOptions // Define as opções da barra de ferramentas
        }
      })
      
      function return_html() {
        return quill.root.innerHTML // Retorna o conteúdo HTML do Quill
      }
      
      function salvar() {
        var csrfToken = document.querySelector('[name=csrfmiddlewaretoken]').value
        var artigo = return_html() // Obtém o conteúdo HTML do Quill
      
        fetch("{% url 'post_create'  %}", {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'X-CSRFToken': csrfToken
          },
          body: JSON.stringify({ artigo: artigo }) // Correção na estrutura do objeto JSON
        }).then(function (data) {
          location.reload(true) // Faça algo com a resposta do servidor, se necessário
        })
      }
      
      function editarComentario(comentarioId) {
        var novoConteudo = prompt('Edite seu comentário:')
        var csrfToken = document.querySelector('[name=csrfmiddlewaretoken]').value
      
        fetch(`/editar-comentario/${comentarioId}/`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
            'X-CSRFToken': csrfToken
          },
          body: `content=${novoConteudo}`
        })
          .then(function (response) {
            if (response.ok) {
              return response.json()
            }
            throw new Error('Erro ao editar comentário')
          })
          .then(function (data) {
            // Atualize o conteúdo do comentário na interface
            document.getElementById('comment_' + comentarioId).innerHTML = data.novo_conteudo
      
            location.reload()
          })
          .catch(function (error) {
            console.error('Erro:', error)
          })
      }
      
      function editarForaDoLoop(comentarioId) {
        var novoConteudo = prompt('Edite seu comentário:')
        var csrfToken = document.querySelector('[name=csrfmiddlewaretoken]').value
      
        fetch(`/editar-comentario/${comentarioId}/`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
            'X-CSRFToken': csrfToken
          },
          body: `content=${novoConteudo}`
        })
          .then(function (response) {
            if (response.ok) {
              return response.json()
            }
            throw new Error('Erro ao editar comentário')
          })
          .then(function (data) {
            // Atualize o conteúdo do comentário na interface
            document.getElementById('comment_' + comentarioId).innerHTML = novoConteudo
      
            location.reload(true)
          })
          .catch(function (error) {
            console.error('Erro:', error)
          })
      }
      
      function excluirComentario(comentarioId) {
        var csrfToken = document.querySelector('[name=csrfmiddlewaretoken]').value;
      
        fetch(`/excluir-comentario/${comentarioId}/`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'X-CSRFToken': csrfToken
          }
        })
        .then(response => {
          if (response.ok) {
            console.log('Comentário excluído com sucesso!');
            // Remova o elemento do DOM ou atualize a interface após a exclusão bem-sucedida, se necessário
          } else {
            console.error('Erro ao excluir o comentário:', response.status);
            // Lidar com erros, se necessário
          }
        })
        .catch(error => {
          console.error('Ocorreu um erro:', error);
        });
      }
      
      
    </script>
  </body>
</html>
